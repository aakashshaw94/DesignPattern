

Focus: Object Interaction and Responsibility
Purpose: Concerned with communication between objects, what goes where, and how complex flows are managed.

List of Behavioral Patterns:

Design Pattern	            Purpose
-------------------------------------------------------
Chain of Responsibility	    Passes a request along a chain of handlers until one of them handles it.

Command	                    Encapsulates a request as an object, thereby allowing for parameterization and queuing of requests.

Interpreter	                Defines a grammatical representation for a language and an interpreter to deal with this grammar.

Iterator	                Provides a way to access elements of an aggregate object sequentially
                            without exposing its underlying representation.

Mediator	                Defines an object that encapsulates how a set of objects interact.

Memento	                    Captures and externalizes an object's internal state without violating encapsulation.

Observer	                Defines a one-to-many dependency so that when one object changes state,
                            all its dependents are notified and updated automatically.

State	                    Allows an object to alter its behavior when its internal state changes.

Strategy	                Defines a family of algorithms, encapsulates each one, and makes them interchangeable.

Template Method	            Defines the skeleton of an algorithm in an operation, deferring some steps to subclasses.

Visitor	                    Allows you to define a new operation without changing the classes of the elements
                            on which it operates.

